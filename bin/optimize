#!/usr/bin/env bash

# Converts JPEG/PNG files to AVIF format. Keeps converted files only when they are at least 10 KB smaller than originals.
#
# - Optimize all images in current folder:
#
# `optimize`
#
# - Optimize a specific image:
#
# `optimize {{file.jpg}}`
#
# - Force-optimize an image (will overwrite if already optimized and save the file even if the difference is less than 10 KB):
#
# `optimize {{file.png}} --force`
#
# ---
# Author: Artem Sapegin, sapegin.me License: MIT
# https://github.com/sapegin/dotfiles

# Common stuff
RED="$(tput setaf 1)"
GREEN="$(tput setaf 2)"
CYAN="$(tput setaf 6)"
BOLD="$(tput bold)"
UNDERLINE="$(tput sgr 0 1)"
NOCOLOR="$(tput sgr0)"
function error() { echo -e "$UNDERLINE$RED$1$NOCOLOR\n"; }

root="$(dirname $(dirname $0))"
bin="$root/node_modules/.bin"

function print_result() {
	filename=$1
	original_size=$2
	optimized_size=$3
	difference=$4
	ratio=$(echo "$optimized_size * 100/ $original_size" | bc -l)
	printf "$BOLD$filename$NOCOLOR: %s → $CYAN%s$NOCOLOR $GREEN(%2.2f%%, −%s$NOCOLOR)\n" "$(pretty-bytes $original_size)" "$(pretty-bytes $optimized_size)" "$ratio" "$(pretty-bytes $difference)"
}

function convert_file() {
	filename=$(basename "$1")
	directory=$(dirname "$1")
	extension="${filename##*.}"
	filename_without_extension="${filename%.*}"

	avif_file="${filename_without_extension}.avif"

	# Skip if optimized file already exists

	if [ -f "$directory/$avif_file" ] && [ "$2" != "--force" ]; then
		return
	fi

	original_size=$(wc -c < "$1")
	is_smaller=false

	preset="photo"
	if [ "$extension" == "png" ]; then
		preset="text"
	fi

	# Convert to AVIF
	$bin/avif --quality 50 --effort 8 --input="$1" --output="$directory"

	avif_size=$(wc -c < "$directory/$avif_file")

	# We consider an optimized file smaller only when it's at least 20 KB smaller
	difference=$((original_size - avif_size))
	if test "$difference" -gt 10240; then
		is_smaller=true
	fi

	if [ "$is_smaller" == "true" ] || [ "$2" == "--force" ]; then
		print_result "$directory/$avif_file" $original_size $avif_size $difference
		return
	fi

	# Delete AVIF file if it's larger than the original
	rm "$directory/$avif_file"
}

# Single file
if [ "$1" != "" ]; then
	convert_file "$1" "$2"
	exit
fi

# JPEG files
for file in *.jpg; do
	if [ -f "$file" ]; then
		convert_file "$file" "$2"
	fi
done

# PNG files
for file in *.png; do
	if [ -f "$file" ]; then
		convert_file "$file" "$2"
	fi
done
