#!/bin/bash

# Tries to merge a local branch into the current branch. It will stop you if you
# are behind and need to pull first.
#
# - Merge a given branch into the current one:
#
# `merge {{branch}}`
#
# ---
#
# Based on git-friendly:
# https://github.com/git-friendly/git-friendly
#
# Author: Artem Sapegin, sapegin.me
# License: MIT
# https://github.com/sapegin/dotfiles

remote="origin"
branch=$1
current_branch=$(git branch 2> /dev/null | grep -e ^* | tr -d \*)

if [ -z $branch ]; then
	echo "Usage: $0 [branchname]"
	exit 1
fi

# Abort if this isn't a Git repository
git rev-parse --is-inside-work-tree > /dev/null || exit $?

# If there is a remote version of this branch, rebase onto current_branch first
# If there's a remote (public) branch, we do not want to be rewriting histories
tracking=$(git branch -vv | egrep "^\*" | awk '{ print $4 '})
echo "tracking=$tracking"
if [[ ! "$tracking" =~ "$remote" ]]; then
	echo "⚒ Local-only branch, rebasing $branch onto $current_branch first..."
	git checkout $branch
	git rebase $current_branch || exit 1
else
	echo "📡 This branch exists remotely, not rebasing"
fi

echo "✂️ Merge $branch into $current_branch"
git checkout $current_branch
git merge $branch || exit 1

echo
echo "🦄 Done"
exit 0
