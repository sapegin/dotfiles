[
  /**
   * Overall approach:
   * - Cmd+*: to most actively used commands
   * - Alt+*: work with cursors and selections
   * - Cmd+K Cmd+*: namespace for less frequently used commands
   * - Cmd+M Cmd+*: namespace for Emmet commands
   */

  /**
   * UI panels
   */
  {
    "comment": "Toggle the left sidebar",
    "key": "cmd+1",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "comment": "Toggle the right sidebar",
    "key": "cmd+2",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "comment": "Toggle the bottom panel",
    "key": "cmd+3",
    "command": "workbench.action.togglePanel"
  },
  {
    "comment": "Maximize/minimize the left sidebar",
    "key": "cmd+k cmd+f",
    "command": "workbench.action.toggleMaximizedAuxiliaryBar",
    "when": "auxiliaryBarFocus"
  },
  {
    "comment": "Maximize/minimize the panel (Full screen)",
    "key": "cmd+k cmd+f",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "panelFocus"
  },
  {
    "comment": "Toggle Explorer in the sidebar",
    "key": "cmd+k cmd+e",
    "command": "workbench.view.explorer"
  },
  {
    "comment": "Open eXtensions in the sidebar",
    "key": "cmd+k cmd+x",
    "command": "workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "comment": "Open list of pull Requests in sidebar",
    "key": "cmd+k cmd+r",
    "command": "pr:github.focus"
  },
  {
    "comment": "Create a New terminal",
    "key": "cmd+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "comment": "Switch to the first Terminal",
    "key": "cmd+t",
    "command": "workbench.action.terminal.focusAtIndex1",
    "when": "!terminalFocus"
  },
  {
    "comment": "Switch to the next Terminal",
    "key": "cmd+t",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "comment": "Open source control (Git) pane",
    "key": "cmd+k cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "comment": "Toggle Status bar",
    "key": "cmd+k cmd+s",
    "command": "workbench.action.toggleStatusbarVisibility"
  },
  {
    "comment": "Close sidebar when pressing Escape in the editor",
    "key": "escape",
    "command": "workbench.action.closeSidebar",
    "when": "sideBarVisible && textInputFocus && !suggestWidgetVisible"
  },
  {
    "comment": "Close panel when pressing Escape in the editor",
    "key": "escape",
    "command": "workbench.action.closePanel",
    "when": "panelVisible && textInputFocus && !suggestWidgetVisible"
  },
  {
    "comment": "Close panel when pressing Escape inside the Search panel",
    "key": "escape",
    "command": "workbench.action.closePanel",
    "when": "activePanel == 'workbench.view.search' && panelFocus"
  },
  {
    "comment": "Close panel when pressing Escape inside the Problems panel",
    "key": "escape",
    "command": "workbench.action.closePanel",
    "when": "activePanel == 'workbench.panel.markers' && panelFocus"
  },
  {
    "comment": "Close panel when pressing Escape inside the Integrated Terminal panel",
    "key": "escape",
    "command": "workbench.action.closePanel",
    "when": "terminalFocus"
  },
  {
    "comment": "Increase current panel size",
    "key": "cmd+]",
    "command": "workbench.action.increaseViewSize"
  },
  {
    "comment": "Decrease current panel size",
    "key": "cmd+[",
    "command": "workbench.action.decreaseViewSize"
  },

  /**
   * Quick open
   */
  {
    // Also, press cmd+enter to open a file in a split editor
    // Press ctrl+tab to switch between two recent editors
    "comment": "Open recent files",
    "key": "cmd+o",
    "command": "workbench.action.quickOpenPreviousEditor"
  },
  {
    "comment": "Show list of sYmbols in the current file",
    "key": "cmd+y",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "comment": "Show list of sYmbols in the workspace",
    "key": "cmd+shift+y",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "comment": "Open command Palette",
    "key": "cmd+p",
    "command": "workbench.action.showCommands",
    "when": "!scmRepository"
  },
  {
    "comment": "Open run Task menu",
    "key": "cmd+k cmd+t",
    "command": "workbench.action.tasks.runTask",
    "when": "!scmRepository"
  },

  /**
   * Code editing and navigation
   */
  {
    "comment": "Focus on the Editor",
    "key": "alt+escape",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "comment": "Format and Save (to make autosave save files without formatting)",
    "key": "cmd+s",
    "command": "runCommands",
    "args": {
      "commands": ["editor.action.format", "workbench.action.files.save"]
    }
  },
  {
    "comment": "Go to line",
    "key": "cmd+g",
    "command": "workbench.action.gotoLine"
  },
  {
    // Convenient to have on the left side of the keyboard so I can use cursor
    // keys or a trackpad with the right hand, also cmd+e and cmd+d (duplicate line)
    // are one below the other, which makes them an easy to remember combo
    "comment": "Delete (Erase) current or selected lines",
    "key": "cmd+e",
    "command": "editor.action.deleteLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    // See comment on the previous key: cmd+e
    "comment": "Duplicate current line or selection",
    "key": "cmd+d",
    "command": "editor.action.duplicateSelection",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "comment": "Join selected lines",
    "key": "cmd+j",
    "command": "editor.action.joinLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    // Matches cmd+f2 (change all occurrences)
    // Also selects the word around the cursor
    "comment": "Select next occurrence",
    "key": "f2",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    // Skips the current selected occurrence
    "comment": "Move selection to the next occurrence",
    "command": "editor.action.moveSelectionToNextFindMatch",
    "key": "alt+f2",
    "when": "editorFocus && editorHasMultipleSelections"
  },
  {
    "comment": "Insert cursor below",
    "key": "alt+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "comment": "Add cursors to the end of selected lines",
    "key": "alt+right",
    "command": "editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus && editorHasSelection"
  },
  {
    "comment": "Move current or selected lines down",
    "key": "ctrl+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "comment": "Move current or selected lines up",
    "key": "ctrl+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    // F6 matches file renaming in file managers
    "comment": "Rename the current symbol",
    "key": "shift+f6",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "comment": "Open quick fix menu",
    "key": "alt+enter",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    // Matches Go back (Ctrl+-)
    "comment": "Go forward",
    "key": "ctrl+=",
    "command": "workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "comment": "Open autocompletion menu",
    "key": "cmd+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "comment": "Got to definition",
    "key": "cmd+enter",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus"
  },
  {
    "comment": "Find all references",
    "key": "cmd+alt+enter",
    "command": "references-view.findReferences",
    "when": "editorHasReferenceProvider"
  },
  {
    // Matches cmd+/ to add an inline comment
    "comment": "Block comment selection",
    "key": "cmd+alt+/",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },

  /**
   * Terminal
   */
  {
    "comment": "Kill the current terminal tab",
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },

  /**
   * Markdown
   */
  {
    "comment": "Open Markdown preview",
    "key": "cmd+k cmd+m",
    "command": "markdown.showPreview",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },

  /**
   * Git
   */
  {
    // Matches GitHub Desktop create pull request command
    "comment": "Create a new pull Request",
    "key": "cmd+r",
    "command": "pr.create",
    "when": "focusedView == workbench.scm"
  },
  {
    // Matches GitHub Desktop push command
    "comment": "Sync changes with the remote",
    "key": "cmd+p",
    "command": "git.sync",
    "when": "focusedView == workbench.scm"
  },
  {
    "comment": "View all Changes",
    "key": "shift+cmd+c",
    "command": "git.viewChanges"
  },
  {
    // TODO: Can it be just space to match GitHub Desktop and LazyGit?
    "comment": "Stage selected file in the source control list",
    "key": "cmd+space",
    "command": "git.stage",
    "when": "workbench.scm.active"
  },

  /**
   * Tasks and debugger
   */
  {
    "comment": "Restarts a currently running task",
    "key": "cmd+alt+r",
    "command": "workbench.action.tasks.restartTask",
    "when": "taskRunning"
  },
  {
    "comment": "Run without debugging",
    "key": "f5",
    "command": "workbench.action.debug.run",
    "when": "debuggersAvailable && debugState != 'initializing'"
  },

  /**
   * Search (find)
   */
  // cmd+f: find in current file (default)
  // cmd+shift+f: find in files (default)
  {
    "comment": "Replace in current file",
    "key": "cmd+r",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorFocus"
  },
  {
    "comment": "Replace in files",
    "key": "cmd+shift+r",
    "command": "workbench.action.replaceInFiles"
  },
  {
    "comment": "Focus on search results when pressing Enter in the search box",
    "key": "enter",
    "command": "search.action.focusNextSearchResult",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "comment": "Replace all in the current file",
    "key": "cmd+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "comment": "Replace all in files",
    "key": "cmd+enter",
    "command": "search.action.replaceAll",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  {
    "key": "ctrl+1",
    "command": "toggleSearchCaseSensitive",
    "when": "searchViewletFocus && !fileMatchOrFolderMatchFocus"
  },
  {
    "key": "ctrl+1",
    "command": "toggleSearchEditorCaseSensitive",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "ctrl+1",
    "command": "toggleFindCaseSensitive",
    "when": "findInputFocussed"
  },
  {
    "key": "ctrl+1",
    "command": "workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
  },
  {
    "key": "ctrl+2",
    "command": "toggleSearchEditorWholeWord",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
  },
  {
    "key": "ctrl+2",
    "command": "toggleFindWholeWord",
    "when": "findInputFocussed"
  },
  {
    "key": "ctrl+2",
    "command": "toggleSearchWholeWord",
    "when": "searchViewletFocus"
  },
  {
    "key": "ctrl+3",
    "command": "toggleSearchEditorRegex",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.terminal.toggleFindRegex",
    "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
  },
  {
    "key": "ctrl+3",
    "command": "toggleSearchRegex",
    "when": "searchViewletFocus"
  },
  {
    "key": "ctrl+3",
    "command": "toggleFindRegex",
    "when": "findInputFocussed"
  },

  /**
   * File explorer
   */
  {
    // Matches macOS Finder
    "comment": "Create a New file",
    "key": "cmd+n",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    // Matches macOS Finder
    "comment": "Create a New folder",
    "key": "shift+cmd+n",
    "command": "explorer.newFolder",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },

  /**
   * Emmet
   */
  {
    "comment": "Select the Inner contents of a tag",
    "key": "cmd+m cmd+i",
    "command": "editor.emmet.action.balanceIn",
    "when": "editorTextFocus"
  },
  {
    "comment": "Select the Outer contents of a tag",
    "key": "cmd+m cmd+o",
    "command": "editor.emmet.action.balanceOut",
    "when": "editorTextFocus"
  },
  {
    "comment": "Wrap with emmet abbreviation",
    "key": "cmd+m cmd+w",
    "command": "editor.emmet.action.wrapWithAbbreviation",
    "when": "editorTextFocus"
  },
  {
    "comment": "Remove the tag but keep the contents",
    "key": "cmd+m cmd+backspace",
    "command": "editor.emmet.action.removeTag",
    "when": "editorTextFocus"
  },

  /**
   * Settings (preferences)
   */
  {
    "comment": "Open user settings (UI)",
    "key": "cmd+;",
    "command": "workbench.action.openGlobalSettings"
  },
  {
    "comment": "Open user settings (JSON)",
    "key": "shift+cmd+;",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "comment": "Open user keybindings (UI)",
    "key": "alt+cmd+;",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "comment": "Open user keybindings (JSON)",
    "key": "shift+alt+cmd+;",
    "command": "workbench.action.openGlobalKeybindingsFile"
  },

  /**
   * Misc.
   */
  {
    "comment": "Switch current Profile",
    "key": "cmd+k cmd+p",
    "command": "workbench.profiles.actions.switchProfile"
  },
  {
    // New File Now extension
    "comment": "Create a New file",
    "key": "cmd+n",
    "command": "newFileNow.createNewFile",
    "when": "editorTextFocus"
  },
  {
    // Dash extension
    "comment": "Open Help for the current symbol in Dash",
    "key": "cmd+k cmd+h",
    "command": "extension.dash.specific",
    "when": "editorTextFocus"
  },
  {
    // Rewrap extension
    "comment": "ReWrap current comment",
    "key": "cmd+k cmd+w",
    "command": "rewrap.rewrapComment",
    "when": "editorTextFocus"
  },

  /**
   * Disable default hotkeys
   */
  {
    "key": "f1",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "shift+cmd+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm"
  },
  {
    "key": "cmd+alt+r",
    "command": "-toggleFindRegex"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename"
  },
  {
    "key": "cmd+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "cmd+s",
    "command": "-workbench.action.files.save"
  },
  {
    "key": "cmd+shift+o",
    "command": "-editor.action.accessibleViewGoToSymbol"
  },
  {
    "key": "cmd+shift+o",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.copyLinesUpAction"
  },
  {
    "key": "f10",
    "command": "-extension.node-debug.startWithStopOnEntry"
  },
  {
    "key": "f10",
    "command": "-workbench.action.debug.stepOver"
  },
  {
    // Don't autocomplete on Enter, just on Tab: more ways to get rid of the autocomplete when you don't need it
    "key": "enter",
    "command": "-acceptSelectedSuggestion"
  },
  {
    // Don't autocomplete on Enter in terminal, just on Tab: more ways to get rid of the autocomplete when you don't need it
    "key": "enter",
    "command": "-workbench.action.terminal.acceptSelectedSuggestion"
  },
  {
    "key": "cmd+.",
    "command": "-editor.action.quickFix"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-editor.action.refactor"
  },
  {
    "key": "cmd+k cmd+t",
    "command": "-workbench.action.selectTheme"
  },
  {
    "key": "shift+cmd+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "alt+cmd+t",
    "command": "-workbench.action.closeOtherEditors"
  },
  {
    "key": "cmd+u",
    "command": "-cursorUndo"
  },
  {
    "key": "cmd+k cmd+u",
    "command": "-editor.action.removeCommentLine"
  },
  {
    "key": "cmd+k u",
    "command": "-workbench.action.closeUnmodifiedEditors"
  },
  {
    "key": "shift+cmd+u",
    "command": "-workbench.action.output.toggleOutput"
  },
  {
    "key": "cmd+k alt+cmd+s",
    "command": "-git.stageSelectedRanges"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole"
  },
  {
    "key": "alt+cmd+]",
    "command": "-editor.unfold"
  },
  {
    "key": "alt+cmd+[",
    "command": "-editor.fold"
  },
  {
    "key": "shift+cmd+h",
    "command": "-workbench.action.replaceInFiles"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest"
  },
  {
    "key": "cmd+l",
    "command": "-expandLineSelection"
  },
  {
    "key": "cmd+d",
    "command": "-editor.action.addSelectionToNextFindMatch"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+j",
    "command": "-editor.action.joinLines"
  },
  {
    "key": "alt+f2",
    "command": "-editor.action.accessibleView"
  },
  {
    "key": "shift+alt+i",
    "command": "-editor.action.insertCursorAtEndOfEachLineSelected"
  },
  {
    "key": "cmd+k cmd+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "alt+cmd+f",
    "command": "-editor.action.startFindReplaceAction"
  },
  {
    "key": "shift+cmd+enter",
    "command": "-editor.action.insertLineBefore"
  },
  {
    "key": "cmd+enter",
    "command": "-editor.action.insertLineAfter"
  },
  {
    "key": "cmd+f12",
    "command": "-editor.action.revealDefinition"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition"
  },
  {
    "key": "shift+alt+f12",
    "command": "-references-view.findReferences"
  },
  {
    "key": "alt+cmd+enter",
    "command": "-workbench.action.terminal.chat.insertCommand"
  },
  {
    "key": "alt+cmd+enter",
    "command": "-workbench.action.terminal.chat.insertFirstCommand"
  },
  {
    "key": "alt+cmd+up",
    "command": "-editor.action.insertCursorAbove"
  },
  {
    "key": "ctrl+alt+cmd+n",
    "command": "-welcome.showNewFileEntries"
  },
  {
    "key": "shift+alt+a",
    "command": "-editor.action.blockComment"
  },
  {
    "key": "ctrl+shift+right",
    "command": "-editor.action.smartSelect.expand"
  },
  {
    "key": "ctrl+shift+cmd+right",
    "command": "-editor.action.smartSelect.expand"
  },
  {
    "key": "ctrl+shift+left",
    "command": "-editor.action.smartSelect.shrink"
  },
  {
    "key": "ctrl+shift+cmd+left",
    "command": "-editor.action.smartSelect.shrink"
  },
  {
    "key": "shift+cmd+l",
    "command": "-editor.action.selectHighlights"
  },
  {
    "key": "cmd+k cmd+0",
    "command": "-editor.foldAll"
  },
  {
    "key": "alt+cmd+0",
    "command": "-workbench.action.toggleEditorGroupLayout"
  },
  {
    "key": "shift+cmd+d",
    "command": "-workbench.view.debug"
  },
  {
    "key": "shift+cmd+m",
    "command": "-workbench.actions.view.problems"
  },
  {
    "key": "cmd+f12",
    "command": "-editor.action.goToImplementation"
  },
  {
    "key": "shift+f12",
    "command": "-editor.action.goToReferences"
  },
  {
    "key": "shift+cmd+\\",
    "command": "-editor.action.jumpToBracket"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next"
  },
  {
    "key": "f8",
    "command": "-editor.action.marker.nextInFiles"
  },
  {
    "key": "shift+alt+f8",
    "command": "-editor.action.marker.prev"
  },
  {
    "key": "shift+f8",
    "command": "-editor.action.marker.prevInFiles"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange"
  },
  {
    "key": "f7",
    "command": "-inlineChat.moveToNextHunk"
  },
  {
    "key": "alt+f3",
    "command": "-editor.action.dirtydiff.next"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.compareEditor.previousChange"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.editor.previousChange"
  },
  {
    "key": "shift+f7",
    "command": "-inlineChat.moveToPreviousHunk"
  },
  {
    "key": "shift+alt+f3",
    "command": "-editor.action.dirtydiff.previous"
  },
  {
    "key": "shift+cmd+b",
    "command": "-workbench.action.tasks.build"
  },
  {
    "key": "ctrl+f5",
    "command": "-workbench.action.debug.run"
  },
  {
    "key": "shift+cmd+f5",
    "command": "-workbench.action.debug.restart"
  },
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.disconnect"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.continue"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.start"
  },
  {
    "key": "cmd+f5",
    "command": "-debug.openView"
  },
  {
    "key": "f5",
    "command": "-debug.openView"
  },
  {
    "key": "cmd+e",
    "command": "-actions.findWithSelection"
  },
  {
    "key": "shift+cmd+x",
    "command": "-workbench.view.extensions"
  },
  {
    "key": "cmd+k cmd+n",
    "command": "-git.unstageSelectedRanges"
  },
  {
    "key": "cmd+1",
    "command": "-workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "cmd+2",
    "command": "-workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "cmd+3",
    "command": "-workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "cmd+4",
    "command": "-workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "cmd+5",
    "command": "-workbench.action.focusFifthEditorGroup"
  },
  {
    "key": "cmd+6",
    "command": "-workbench.action.focusSixthEditorGroup"
  },
  {
    "key": "cmd+7",
    "command": "-workbench.action.focusSeventhEditorGroup"
  },
  {
    "key": "cmd+8",
    "command": "-workbench.action.focusEighthEditorGroup"
  },
  {
    "key": "cmd+9",
    "command": "-workbench.action.lastEditorInGroup"
  },
  {
    "key": "ctrl+cmd+9",
    "command": "-workbench.action.moveEditorToLastGroup"
  },
  {
    "key": "cmd+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "alt+cmd+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+k cmd+m",
    "command": "-workbench.action.toggleMaximizeEditorGroup"
  },
  {
    "key": "cmd+k v",
    "command": "-markdown.showPreviewToSide"
  },
  {
    "key": "shift+cmd+v",
    "command": "-markdown.showPreview"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "alt+cmd+c",
    "command": "-toggleSearchEditorCaseSensitive"
  },
  {
    "key": "ctrl+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+2",
    "command": "-workbench.action.openEditorAtIndex2"
  },
  {
    "key": "ctrl+3",
    "command": "-workbench.action.openEditorAtIndex3"
  },
  {
    "key": "ctrl+4",
    "command": "-workbench.action.openEditorAtIndex4"
  },
  {
    "key": "ctrl+5",
    "command": "-workbench.action.openEditorAtIndex5"
  },
  {
    "key": "ctrl+6",
    "command": "-workbench.action.openEditorAtIndex6"
  },
  {
    "key": "ctrl+7",
    "command": "-workbench.action.openEditorAtIndex7"
  },
  {
    "key": "ctrl+8",
    "command": "-workbench.action.openEditorAtIndex8"
  },
  {
    "key": "ctrl+9",
    "command": "-workbench.action.openEditorAtIndex9"
  },
  {
    "key": "ctrl+0",
    "command": "-workbench.action.lastEditorInGroup"
  },
  {
    "key": "alt+cmd+w",
    "command": "-toggleSearchEditorWholeWord"
  },
  {
    "key": "alt+cmd+r",
    "command": "-toggleSearchEditorRegex"
  },
  {
    "key": "alt+cmd+w",
    "command": "-workbench.action.terminal.toggleFindWholeWord"
  },
  {
    "key": "alt+cmd+w",
    "command": "-toggleFindWholeWord"
  },
  {
    "key": "alt+cmd+w",
    "command": "-toggleSearchWholeWord"
  },
  {
    "key": "alt+cmd+c",
    "command": "-workbench.action.terminal.toggleFindCaseSensitive"
  },
  {
    "key": "alt+cmd+c",
    "command": "-toggleFindCaseSensitive"
  },
  {
    "key": "alt+cmd+c",
    "command": "-toggleSearchCaseSensitive"
  },
  {
    "key": "alt+cmd+r",
    "command": "-workbench.action.terminal.toggleFindRegex"
  },
  {
    "key": "alt+cmd+r",
    "command": "-toggleSearchRegex"
  },
  {
    "key": "cmd+enter",
    "command": "-editor.action.replaceAll"
  },
  {
    "key": "alt+cmd+enter",
    "command": "-editor.action.replaceAll"
  },
  {
    "key": "alt+cmd+enter",
    "command": "-search.action.replaceAll"
  },
  {
    "key": "cmd+enter",
    "command": "-search.action.openInEditor"
  },
  {
    "key": "f4",
    "command": "-references-view.next"
  },
  {
    "key": "shift+f4",
    "command": "-references-view.prev"
  },
  {
    "key": "f4",
    "command": "-goToNextReference"
  },
  {
    "key": "shift+f4",
    "command": "-goToPreviousReference"
  },
  {
    "key": "cmd+f3",
    "command": "-editor.action.nextSelectionMatchFindAction"
  },
  {
    "key": "shift+cmd+f3",
    "command": "-editor.action.previousSelectionMatchFindAction"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.terminal.focusNext"
  },
  {
    "key": "ctrl+h",
    "command": "-extension.dash.specific"
  },
  {
    "key": "ctrl+shift+h",
    "command": "-extension.dash.emptySyntax"
  },
  {
    "key": "alt+h",
    "command": "-extension.dash.customSyntax"
  },
  {
    "key": "ctrl+alt+h",
    "command": "-extension.dash.all"
  },
  {
    "key": "cmd+k cmd+w",
    "command": "-workbench.action.closeAllEditors"
  },
  {
    "key": "alt+q",
    "command": "-rewrap.rewrapComment"
  },
  {
    "key": "alt+cmd+down",
    "command": "-editor.action.insertCursorBelow"
  },
  {
    "key": "cmd+]",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  }
]
